{
  "uid" : "3df81bf556f4087c",
  "name" : "test_api[3-天气-没有写城市-http://wthrcdn.etouch.cn/weather_mini-GET-params5-200-invalid-citykey]",
  "fullName" : "test_cases#test_api",
  "historyId" : "8b6584e862aceca3b45dd4bab4d3c7fd",
  "time" : {
    "start" : 1662536779776,
    "stop" : 1662536780323,
    "duration" : 547
  },
  "description" : "接口测试函数",
  "descriptionHtml" : "<p>接口测试函数</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False == True\n +  where False = <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000016A22DFD670>>(<Response [200]>, 200, 'invalid-citykey')\n +    where <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000016A22DFD670>> = <simple_requests.RequestsHandler object at 0x0000016A22DFD670>.check_response",
  "statusTrace" : "number = 3, name = '天气-没有写城市', url = 'http://wthrcdn.etouch.cn/weather_mini', method = 'GET', params = {}\ncode = 200, pattern = 'invalid-citykey'\n\n    @pytest.mark.parametrize(\n            [\n            'number',\n            'name',\n            'url',\n            'method',\n            'params',\n            'code',\n            'pattern',\n            ],\n            Data())\n    def test_api(number,name,url,method,params,code,pattern):\n        '''接口测试函数'''\n        LOGGER.info(f'测试用例【#{number} {name}】开始执行')\n        rh = RequestsHandler()\n        response = rh.get_response(method,url,params)\n>       assert rh.check_response(response,code,pattern) == True\nE       AssertionError: assert False == True\nE        +  where False = <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000016A22DFD670>>(<Response [200]>, 200, 'invalid-citykey')\nE        +    where <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000016A22DFD670>> = <simple_requests.RequestsHandler object at 0x0000016A22DFD670>.check_response\n\ntest_cases.py:22: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1662536775728,
      "stop" : 1662536775931,
      "duration" : 203
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "接口测试函数",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False == True\n +  where False = <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000016A22DFD670>>(<Response [200]>, 200, 'invalid-citykey')\n +    where <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000016A22DFD670>> = <simple_requests.RequestsHandler object at 0x0000016A22DFD670>.check_response",
    "statusTrace" : "number = 3, name = '天气-没有写城市', url = 'http://wthrcdn.etouch.cn/weather_mini', method = 'GET', params = {}\ncode = 200, pattern = 'invalid-citykey'\n\n    @pytest.mark.parametrize(\n            [\n            'number',\n            'name',\n            'url',\n            'method',\n            'params',\n            'code',\n            'pattern',\n            ],\n            Data())\n    def test_api(number,name,url,method,params,code,pattern):\n        '''接口测试函数'''\n        LOGGER.info(f'测试用例【#{number} {name}】开始执行')\n        rh = RequestsHandler()\n        response = rh.get_response(method,url,params)\n>       assert rh.check_response(response,code,pattern) == True\nE       AssertionError: assert False == True\nE        +  where False = <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000016A22DFD670>>(<Response [200]>, 200, 'invalid-citykey')\nE        +    where <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000016A22DFD670>> = <simple_requests.RequestsHandler object at 0x0000016A22DFD670>.check_response\n\ntest_cases.py:22: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e501547e629e5c95",
      "name" : "log",
      "source" : "e501547e629e5c95.txt",
      "type" : "text/plain",
      "size" : 503
    }, {
      "uid" : "c97d041cd4748729",
      "name" : "stderr",
      "source" : "c97d041cd4748729.txt",
      "type" : "text/plain",
      "size" : 578
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 2,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_cases"
  }, {
    "name" : "host",
    "value" : "DESKTOP-9DJ43AJ"
  }, {
    "name" : "thread",
    "value" : "15840-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cases"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "code",
    "value" : "200"
  }, {
    "name" : "method",
    "value" : "'GET'"
  }, {
    "name" : "name",
    "value" : "'天气-没有写城市'"
  }, {
    "name" : "number",
    "value" : "3"
  }, {
    "name" : "params",
    "value" : "{}"
  }, {
    "name" : "pattern",
    "value" : "'invalid-citykey'"
  }, {
    "name" : "url",
    "value" : "'http://wthrcdn.etouch.cn/weather_mini'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3df81bf556f4087c.json",
  "parameterValues" : [ "200", "'GET'", "'天气-没有写城市'", "3", "{}", "'invalid-citykey'", "'http://wthrcdn.etouch.cn/weather_mini'" ]
}