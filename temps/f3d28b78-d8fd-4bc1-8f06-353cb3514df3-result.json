{"name": "test_api[3-天气-没有写城市-http://wthrcdn.etouch.cn/weather_mini-GET-params5-200-invalid-citykey]", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == True\n +  where False = <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000023CE0EA5DC0>>(<Response [200]>, 200, 'invalid-citykey')\n +    where <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000023CE0EA5DC0>> = <simple_requests.RequestsHandler object at 0x0000023CE0EA5DC0>.check_response", "trace": "number = 3, name = '天气-没有写城市', url = 'http://wthrcdn.etouch.cn/weather_mini', method = 'GET', params = {}\ncode = 200, pattern = 'invalid-citykey'\n\n    @pytest.mark.parametrize(\n            [\n            'number',\n            'name',\n            'url',\n            'method',\n            'params',\n            'code',\n            'pattern',\n            ],\n            Data())\n    def test_api(number,name,url,method,params,code,pattern):\n        '''接口测试函数'''\n        LOGGER.info(f'测试用例【#{number} {name}】开始执行')\n        rh = RequestsHandler()\n        headers = {\n            'User-Agent':\n                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36',\n        }\n        response = requests.Response()\n        if method.lower() == 'get':\n            response = rh.get_response(method,url,headers=headers,params=params)\n        elif method.lower() == 'post':\n            response = rh.get_response(method,url,headers=headers,data=params)\n>       assert rh.check_response(response,code,pattern) == True\nE       AssertionError: assert False == True\nE        +  where False = <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000023CE0EA5DC0>>(<Response [200]>, 200, 'invalid-citykey')\nE        +    where <bound method RequestsHandler.check_response of <simple_requests.RequestsHandler object at 0x0000023CE0EA5DC0>> = <simple_requests.RequestsHandler object at 0x0000023CE0EA5DC0>.check_response\n\ntest_cases.py:31: AssertionError"}, "description": "接口测试函数", "attachments": [{"name": "log", "source": "500efa3c-1246-4749-b86e-2294f8774394-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b4e7bdb1-dc3a-4191-a094-889a509b8ec0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "number", "value": "3"}, {"name": "name", "value": "'天气-没有写城市'"}, {"name": "url", "value": "'http://wthrcdn.etouch.cn/weather_mini'"}, {"name": "method", "value": "'GET'"}, {"name": "params", "value": "{}"}, {"name": "code", "value": "200"}, {"name": "pattern", "value": "'invalid-citykey'"}], "start": 1663038724690, "stop": 1663038725208, "uuid": "1fa91e6a-ee96-441d-9003-2539a296292b", "historyId": "8b6584e862aceca3b45dd4bab4d3c7fd", "testCaseId": "2b8fdc7a16b50457de0dd9a848ac3552", "fullName": "test_cases#test_api", "labels": [{"name": "suite", "value": "test_cases"}, {"name": "host", "value": "DESKTOP-9DJ43AJ"}, {"name": "thread", "value": "8-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases"}]}